# Generated by Django 3.0.3 on 2020-03-01 06:21

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=1000)),
                ('icon', models.CharField(max_length=1000)),
                ('sub_category_flag', models.IntegerField(default=0)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 147789), verbose_name='date published')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('classroom_id', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('classroom_name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField(default=0)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 150831), verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('district_id', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('province_id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_id', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('subject_name', models.CharField(max_length=200)),
                ('academic_credits', models.IntegerField(default=0)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 151243), verbose_name='date published')),
                ('classroom', models.ManyToManyField(to='Student.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('ward_id', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=30)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.District')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateTimeField(blank=True, default=datetime.datetime(2020, 3, 1, 13, 21, 5, 152926), null=True, verbose_name='birthday')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('number_phone', models.CharField(blank=True, max_length=11, null=True)),
                ('job', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('stay_now', models.CharField(blank=True, max_length=500, null=True)),
                ('national', models.CharField(blank=True, max_length=500, null=True)),
                ('folk', models.CharField(blank=True, max_length=500, null=True)),
                ('religion', models.CharField(blank=True, max_length=500, null=True)),
                ('cmtnd', models.CharField(blank=True, max_length=14, null=True)),
                ('cmtnd_day_create', models.DateTimeField(blank=True, default=datetime.datetime(2020, 3, 1, 13, 21, 5, 153217), null=True, verbose_name='CMTND day create')),
                ('cmnt_area', models.CharField(blank=True, max_length=500, null=True)),
                ('bank_number', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=500, null=True)),
                ('code_of_health', models.CharField(blank=True, max_length=100, null=True)),
                ('dad_name', models.CharField(blank=True, max_length=500, null=True)),
                ('dad_birthday', models.DateTimeField(blank=True, default=datetime.datetime(2020, 3, 1, 13, 21, 5, 153314), null=True, verbose_name="dad'birthday")),
                ('dad_number_phone', models.CharField(blank=True, max_length=14, null=True)),
                ('dad_job', models.CharField(blank=True, max_length=150, null=True)),
                ('dad_address', models.CharField(blank=True, max_length=500, null=True)),
                ('mom_name', models.CharField(blank=True, max_length=500, null=True)),
                ('mom_birthday', models.DateTimeField(blank=True, default=datetime.datetime(2020, 3, 1, 13, 21, 5, 153391), null=True, verbose_name="mom'birthday")),
                ('mom_number_phone', models.CharField(blank=True, max_length=14, null=True)),
                ('mom_job', models.CharField(blank=True, max_length=150, null=True)),
                ('mom_address', models.CharField(blank=True, max_length=500, null=True)),
                ('sis_bro', models.CharField(blank=True, max_length=500, null=True)),
                ('my_son_daughter', models.CharField(blank=True, max_length=500, null=True)),
                ('wife_husband_name', models.CharField(blank=True, max_length=500, null=True)),
                ('wife_husband_birthday', models.DateTimeField(blank=True, default=datetime.datetime(2020, 3, 1, 13, 21, 5, 153495), null=True, verbose_name="mom'birthday")),
                ('wife_husband_number_phone', models.CharField(blank=True, max_length=14, null=True)),
                ('wife_husband_job', models.CharField(blank=True, max_length=150, null=True)),
                ('wife_husband_address', models.CharField(blank=True, max_length=500, null=True)),
                ('tutor_name', models.CharField(blank=True, max_length=500, null=True)),
                ('tutor_birthday', models.DateTimeField(blank=True, default=datetime.datetime(2020, 3, 1, 13, 21, 5, 153572), null=True, verbose_name="mom'birthday")),
                ('tutor_number_phone', models.CharField(blank=True, max_length=14, null=True)),
                ('tutor_job', models.CharField(blank=True, max_length=150, null=True)),
                ('tutor_address', models.CharField(blank=True, max_length=500, null=True)),
                ('certificate', models.CharField(blank=True, max_length=500, null=True)),
                ('priority_subject', models.CharField(blank=True, max_length=500, null=True)),
                ('subject_of_reduction', models.CharField(blank=True, max_length=500, null=True)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(blank=True, default=datetime.datetime(2020, 3, 1, 13, 21, 5, 153719), null=True, verbose_name='date published')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.Classroom')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.District')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.Province')),
                ('technique', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.Subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.Ward')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_name', models.CharField(max_length=1000)),
                ('icon', models.CharField(blank=True, max_length=1000, null=True)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 148460), verbose_name='date published')),
                ('category_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.Category')),
            ],
        ),
        migrations.CreateModel(
            name='ShareNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=8000, null=True)),
                ('title', models.CharField(blank=True, max_length=8000, null=True)),
                ('content', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Content')),
                ('file', models.FileField(blank=True, null=True, upload_to='files/%Y/%m/%d/')),
                ('share_school_flag', models.IntegerField(default=0)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 157139), verbose_name='date published')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.Classroom')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theory_score', models.FloatField(default=0)),
                ('exercise_score', models.FloatField(default=0)),
                ('test_score', models.FloatField(default=0)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 152398), verbose_name='date published')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.Subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlanTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 157769), verbose_name='date published')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.Classroom')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=8000, null=True)),
                ('title', models.CharField(blank=True, max_length=8000, null=True)),
                ('content', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Content')),
                ('file', models.FileField(blank=True, null=True, upload_to='files/%Y/%m/%d/')),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 149041), verbose_name='date published')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.Province'),
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 155666), verbose_name='start date')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 155698), verbose_name='end date')),
                ('day', models.CharField(choices=[('Morning', 'Morning'), ('Afternoon', 'Afternoon'), ('Evening', 'Evening')], max_length=15)),
                ('kind', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Wednesday', 'Wednesday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=20)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 155828), verbose_name='date published')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Student.Classroom')),
                ('subject', models.ManyToManyField(to='Student.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='AssignedExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('on_delete_flag', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=datetime.datetime(2020, 3, 1, 13, 21, 5, 168594), verbose_name='date published')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.Classroom')),
                ('exam_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ExamTeacher', to=settings.AUTH_USER_MODEL)),
                ('main_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MainTeacher', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.Subject')),
                ('subject_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SuTeacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
